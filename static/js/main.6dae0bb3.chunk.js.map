{"version":3,"sources":["logo.svg","Config.js","Summary.js","App.js","reportWebVitals.js","index.js"],"names":["texts","header","inputs","label","type","name","validation","required","minLength","maxLength","error","Summary","props","console","log","string","Card","className","Object","keys","map","key","index","App","useState","formData","setFormData","errors","setErrors","success","setSuccess","Container","onSubmit","e","preventDefault","data","item","Label","input","Row","Col","md","Input","max","min","onChange","target","value","onChangehandler","onBlur","some","length","handleValidation","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dae0bb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\n    {\n        texts: {\n            header: \"Please provide pincode\"\n        },\n        inputs: [\n            {\n                label: \"Pincode\",\n                type: \"text\",\n                name: \"pincode\",\n                validation: {\n                    required: true,\n                    minLength: 6,\n                    maxLength: 7\n                },\n                error: \"Invalid Pincode\"\n            }\n        ]\n    },\n    {\n        texts: {\n            header: \"Please provide address\"\n        },\n        inputs: [\n            {\n                label: \"Address line 1\",\n                type: \"text\",\n                name: \"address-line-1\",\n                validation: {\n                    required: true\n                },\n                error: \"Please provide Address\"\n            },\n            {\n                label: \"Address line 2\",\n                type: \"text\",\n                name: \"address-line-2\"\n            },\n            {\n                label: \"Locality\",\n                type: \"text\",\n                name: \"locality\",\n                validation: {\n                    required: true\n                },\n                error: \"Please provide Locality\"\n            }\n        ]\n    },\n    {\n        texts: {\n            header: \"Please provide landmark\"\n        },\n        inputs: [\n            {\n                label: \"Landmark\",\n                type: \"textarea\",\n                name: \"landmark\"\n            }\n        ]\n    }\n];","import { Card } from 'reactstrap';\n\nconst Summary = ({ props }) => {\n    console.log(props.string);\n    return (\n        <Card>\n            <h2 className=\"text-center\">Summary</h2>\n            {Object.keys(props).map((key, index) => (\n                <div className=\"mb-2\" key={index}>{`${key}:${props[key]}`}</div>\n            ))}\n        </Card>\n    )\n}\n\n\nexport default Summary","import logo from './logo.svg';\nimport './App.css';\nimport { Container, Card, Label, Col, Row, Input, Button } from 'reactstrap';\nimport data from './Config'\nimport { useState } from 'react'\nimport Summary from './Summary'\n\nfunction App() {\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const onChangehandler = (name, e) => {\n    e.preventDefault();\n    setFormData({\n      ...formData,\n      [name]: e.target.value\n    });\n  }\n\n  const handleFormData = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    setSuccess(!success);\n  }\n\n  const handleValidation = (validation, name, e) => {\n    if (!validation) return\n    let value = formData[name];\n\n    let isNotValid = Object.keys(validation).some((key) => {\n      switch (key) {\n        case 'required':\n          if (value === \"\") return true\n        case 'maxLenght':\n          if (value.length > validation.maxLength) return true\n        case 'minLength':\n          if (value.length < validation.minLength) return true\n      }\n    });\n    if (isNotValid == true) {\n      setErrors({\n        ...errors,\n        [name]: true\n      })\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n        {\n          success ? (<Summary props={formData} />) : (\n            <form onSubmit={handleFormData}>\n              {\n                data.map((item, key) => (\n                  <Card key={key} className=\"mb-4 p-4\">\n                    <Label className=\"mb-2\">{item.texts.header}</Label>\n                    {item.inputs.map((input, key) => (\n                      <Row key={key}\n                        className=\"mb-1\" >\n                        <Col md=\"4\">\n                          <Label>\n                            {input.label}\n                          </Label>\n                        </Col>\n\n                        <Col md=\"8\">\n                          <Input\n                            type={input.type}\n                            name={input.name}\n                            required={input.required}\n                            max={input.maxLength}\n                            min={input.minLength}\n                            onChange={(e) => onChangehandler(input.name, e)}\n                            value={formData[input.name]}\n                            onBlur={(e) => handleValidation(input.validation, input.name, e)}\n                          />{\n                            errors[input.name] && <div className=\"error\">{input.error}</div>\n                          }\n                        </Col>\n                      </Row>\n                    ))}\n                  </Card>\n                ))}\n              <Button\n                type=\"submit\" >Submit</Button>\n            </form>)\n        }\n\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}