[{"/home/nitin/Desktop/task/src/index.js":"1","/home/nitin/Desktop/task/src/App.js":"2","/home/nitin/Desktop/task/src/reportWebVitals.js":"3","/home/nitin/Desktop/task/src/Config.js":"4","/home/nitin/Desktop/task/src/Summary.js":"5"},{"size":547,"mtime":1610006363358,"results":"6","hashOfConfig":"7"},{"size":3521,"mtime":1610021713794,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610006114193,"results":"9","hashOfConfig":"7"},{"size":1480,"mtime":1610006330047,"results":"10","hashOfConfig":"7"},{"size":380,"mtime":1610015992421,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"557ro1",{"filePath":"14","messages":"15","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nitin/Desktop/task/src/index.js",[],"/home/nitin/Desktop/task/src/App.js",["23","24","25","26","27","28","29","30"],"import logo from './logo.svg';\nimport './App.css';\nimport { Container, Card, Label, Col, Row, Input, Button } from 'reactstrap';\nimport data from './Config'\nimport { useState } from 'react'\nimport Summary from './Summary'\n\nfunction App() {\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(false);\n  const onChangehandler = (name, e) => {\n    e.preventDefault();\n    setFormData({\n      ...formData,\n      [name]: e.target.value\n    });\n  }\n\n  const handleFormData = (e) => {\n    e.preventDefault();\n    const cannotSubmit = data.some((item, key) => {\n      return item.inputs.some((input) => {\n        if (!input.validation) return false;\n        let value = formData[input.name];\n        const result = isInputNotValid(value, input.validation);\n        if (result == true) setErrors({ ...errors, [input.name]: true })\n        else setErrors({ ...errors, [input.name]: false })\n        return result;\n      })\n    })\n    if (cannotSubmit == true) return;\n    console.log(formData);\n    setSuccess(!success);\n  }\n\n  const isInputNotValid = (value, validation) => {\n    return Object.keys(validation).some((key) => {\n      switch (key) {\n        case 'required':\n          if (value === \"\") return true\n        case 'maxLength':\n          if (!value || value.length > validation.maxLength) return true\n        case 'minLength':\n          if (!value || value.length < validation.minLength) return true\n      }\n    });\n  }\n\n  const handleValidation = (validation, name, e) => {\n    if (!validation) return\n    let value = formData[name];\n\n    let isNotValid = isInputNotValid(value, validation);\n    if (isNotValid == true) {\n      setErrors({\n        ...errors,\n        [name]: true\n      })\n    }\n    else {\n      setErrors({\n        ...errors,\n        [name]: false\n      })\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n        {\n          success ? (<Summary props={formData} />) : (\n            <form onSubmit={handleFormData}>\n              {\n                data.map((item, key) => (\n                  <Card key={key} className=\"mb-4 p-4\">\n                    <Label className=\"mb-2\">{item.texts.header}</Label>\n                    {item.inputs.map((input, key) => (\n                      <Row key={key}\n                        className=\"mb-1\" >\n                        <Col md=\"4\">\n                          <Label>\n                            {input.label}\n                          </Label>\n                        </Col>\n\n                        <Col md=\"8\">\n                          <Input\n                            type={input.type}\n                            name={input.name}\n                            required={input.required}\n                            max={input.maxLength}\n                            min={input.minLength}\n                            onChange={(e) => onChangehandler(input.name, e)}\n                            value={formData[input.name]}\n                            onBlur={(e) => handleValidation(input.validation, input.name, e)}\n                          />{\n                            errors[input.name] && <div className=\"error\">{input.error}</div>\n                          }\n                        </Col>\n                      </Row>\n                    ))}\n                  </Card>\n                ))}\n              <Button\n                type=\"submit\" >Submit</Button>\n            </form>)\n        }\n\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","/home/nitin/Desktop/task/src/reportWebVitals.js",[],"/home/nitin/Desktop/task/src/Config.js",["31"],"/home/nitin/Desktop/task/src/Summary.js",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"36","severity":1,"message":"37","line":27,"column":20,"nodeType":"38","messageId":"39","endLine":27,"endColumn":22},{"ruleId":"36","severity":1,"message":"37","line":32,"column":22,"nodeType":"38","messageId":"39","endLine":32,"endColumn":24},{"ruleId":"40","severity":1,"message":"41","line":38,"column":47,"nodeType":"42","messageId":"43","endLine":38,"endColumn":49},{"ruleId":"44","severity":1,"message":"45","line":39,"column":7,"nodeType":"46","messageId":"47","endLine":46,"endColumn":8},{"ruleId":"48","severity":1,"message":"49","line":42,"column":9,"nodeType":"50","messageId":"51","endLine":43,"endColumn":73},{"ruleId":"48","severity":1,"message":"49","line":44,"column":9,"nodeType":"50","messageId":"51","endLine":45,"endColumn":73},{"ruleId":"36","severity":1,"message":"37","line":55,"column":20,"nodeType":"38","messageId":"39","endLine":55,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":1,"column":1,"nodeType":"54","endLine":62,"endColumn":3},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration"]